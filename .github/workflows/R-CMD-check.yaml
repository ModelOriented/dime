on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest,   r: 'devel'}
          - {os: macOS-latest,   r: '4.1'}
          - {os: macOS-latest,   r: '4.0'}
          - {os: macOS-latest,   r: '3.6'}
          - {os: windows-latest, r: '4.1'}
          - {os: windows-latest, r: '4.0'}
          - {os: windows-latest, r: '3.6'} # xgboost fails
          - {os: ubuntu-18.04, r: '4.1'} # , vdiffr: true,  xref: true, rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
          - {os: ubuntu-18.04, r: '4.0'} # , vdiffr: true,  xref: true, rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}
          - {os: ubuntu-18.04, r: '3.6'} # , vdiffr: true,  xref: true, rspm: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true

      # - name: Cache R packages
      #   if: runner.os != 'Windows'
      #   uses: actions/cache@v1
      #   with:
      #     path: ${{ env.R_LIBS_USER }}
      #     key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('.github/depends.Rds') }}
      #     restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      # - name: Install system dependencies
      #   if: runner.os == 'Linux'
      #   env:
      #     RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
      #   run: |
      #     Rscript -e "remotes::install_github('r-hub/sysreqs')"
      #     sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
      #     sudo -s eval "$sysreqs"
      #     sudo apt-get install -y qpdf

      # - name: Install dependencies
      #   run: |
      #     remotes::install_deps(dependencies = TRUE)
      #     remotes::install_cran("rcmdcheck")
      #   shell: Rscript {0}

      # - name: Check
      #   run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran", "--run-donttest", "--run-dontrun", "--no-multiarch"),
      #                             build_args = "--compact-vignettes=no", error_on = "warning", check_dir = "check")
      #   shell: Rscript {0}

      # - name: Upload check results
      #   if: failure()
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: ${{ runner.os }}-r${{ matrix.config.r }}-results
      #     path: check
